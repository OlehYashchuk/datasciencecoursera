cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
g <- function(y) {
y + z
}
z <- 4
x + g(x)
x + g(3)
3 + g(3)
rm(list = ls())
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
x + g(x)
f(3)
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
if(x < 3) {
NA
} else {
10
}
x <- matrix(rnorm(30, 10, 3))
x
x <- matrix(rnorm(30), 10, 3))
x <- matrix(rnorm(30), 10, 3)
x
x <- matrix(rnorm(15), 5, 3)
x
x <- matrix(rnorm(15), 2, 4)
x <- matrix(rnorm(8), 2, 4)
x
apply(x, 2, mean)
apply(x, 1, mean)
a <- array(rnorm(2 * 2 * 10), c(2, 2, 10))
a
a[1,1,1]
a[1,1,]
a[1,,1]
a[,1,1]
a[1:3,1:3,1:3]
a[1,1,1]
a[1,,]
a[2,,]
a[,1,]
a[,,1]
x <- c(rnorm(10), runif(10), rnorm(10))
x
f <- gl(3, 10)
tapply(x, f, mean)
tapply(x, f, range)
tapply(x, f, range, simplify = TRUE)
tapply(x, f, range, simplify = F)
tapply(x, f, range, simplify = TRUE)
class(tapply(x, f, range, simplify = TRUE))
class(tapply(x, f, range, simplify = FALSE))
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
x <- c(rnorm(10), runif(10), rnorm(10))
x
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
split(x, f)
lapply(split(x, f), mean)
tapplay(x, f, mean)
tapply(x, f, mean)
lapply(split(x, f), mean)
tapply(x, f, mean)
tapply(x, f, mean, simplify = T)
tapply(x, f, mean, simplify = F)
lapply(split(x, f), mean) == tapply(x, f, mean, simplify = F)
lapply(split(x, f), mean)
tapply(x, f, mean, simplify = F)
head(airquality)
s <- split(airquality, airquality$Month)
s
lapply(s, function(x) x[, c("Ozone", "Solar.R", "Wind")])
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")])
)
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = TRUE))
x <- rnorm(10)
f1 <- gl(2, 5)
f2 <- gl(5, 2)
f1
f2
interaction(f1, f2)
split(x, c(f1, f2))
split(x, list(f1, f2))
str(split(x, list(f1, f2)))
str(split(x, list(f1, f2), drop = TRUE))
interaction(f1, f2)
f1 <- gl(2, 5)
f1
f2
str(split(x, list(f1, f2), drop = TRUE))
swirl()
library(swirl)
install.packages('swirl')
packageVersion("swirl")
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
viewinfo(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(lapply(flags, unique), length)
sapply(lapply(flags, unique), length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(datasets)
data(iris)
?iris
class(iris)
sapply(iris, class)
sapply(iris, mean)
sapply(iris, mean, drop = TRUE)
sapply(iris$Sepal.Length, mean, drop = TRUE)
sapply(iris, mean, drop = TRUE)
sapply(iris[,1:4], mean, drop = TRUE)
round(sapply(iris[,1:4], mean, drop = TRUE))
round(sapply(iris[,1:4], mean))#, drop = TRUE))
round(sapply(iris[,1:4], mean, drop = TRUE))
apply(iris[, 1:4], 2, mean)
sapply(iris[,1:4], mean, drop = TRUE)
library(datasets)
data(mtcars)
?mtcars
)
str(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
?with
lapply(mtcars, mean)
str(mtcars)
x <- subset(mtcars, c(hp, cyl))
x <- subset(mtcars, hp, cyl)
x <- subset(mtcars, select = c(hp, cyl))
sapply(x, range)
tapply(mtcars$hp, mtcars$cyl, mean)
str(tapply(mtcars$hp, mtcars$cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)[1]
y <- tapply(mtcars$hp, mtcars$cyl, mean)
y
y$8
y[3]
y[3] - y[1]
round(y[3] - y[1])
sapply(x, range)
round(y[3] - y[1])
debug(ls)
ls()
ls()
ls()
data(iris)
sapply(iris, class)
sapply(iris[,1:4], mean, drop = TRUE)
tapply(iris[,1:4], iris$Species, mean, drop = TRUE)
tapply(iris[,1:4], iris$Species, mean, drop = TRUE)
iris$Species
iris[,1:4]
tapply(iris[,1:4], iris$Species, mean)#, drop = TRUE)
tapply(iris[,1:4], iris$Species, mean, drop = TRUE)
tapply(iris[,1], iris$Species, mean, drop = TRUE)
iris[,1]
iris
head(iris)
round(tapply(iris[,1], iris$Species, mean, drop = TRUE))
x <- subset(mtcars, select = c(hp, cyl))
y <- tapply(mtcars$hp, mtcars$cyl, mean)
y[3] - y[1]
round(y[3] - y[1])
library(httr)
oauth_endpoints("github")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5d44502f8c6130369b82",
secret = "e6bbc45528dbcae323a506481246dd11493cdee0")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
rm(list = ls())
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "5d44502f8c6130369b82",
secret = "e6bbc45528dbcae323a506481246dd11493cdee0")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
req
stop_for_status(req)
content(req)
install.packages('KernSmooth')
library(KernSmooth)
library(quantmod)
library(lubridate)
library(dplyr)
setwd('D:/Oleh/Coursera/Data Science')
data <- read.csv('getdata%2Fdata%2Fss06hid.csv')
strsplit(names(data), 'wgtp')[123]
plyr
tbl_df(data)
dir.create('data')
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
f <- file.path('./data', 'GDP.csv')
download.file(url, f)
data <- read.csv('./data/GDP.csv', header = F, stringsAsFactors = FALSE, skip=5, nrows=190)
data <- tbl_df(data)
data <- data %>% select(V1, V2, V4, V5)
data
data <- setNames(data, c('CountryCode', 'Rate', 'Country', 'gdp'))
data
data <- filter(data, !(CountryCode == ''))
data
data <- data %>% mutate(gdp = as.numeric(gsub(',| ', '', gdp)))
data
data <- read.csv('./data/GDP.csv', header = F, stringsAsFactors = FALSE, skip=5, nrows=190)
data <- tbl_df(data)
data <- data %>% select(V1, V2, V4, V5)
data <- setNames(data, c('CountryCode', 'Rate', 'Country', 'gdp'))
data <- filter(data, !(CountryCode == ''))
gsub(',| ', '', gdp)
gsub(',| ', '', data$gdp)
data <- data %>% mutate(gdp = as.numeric(gsub(',| ', '', gdp)))
data
summary(data$gdp)
mean(data$gdp, na.rm = TRUE)
grep("^United", data$Country)
edu <- read.csv('getdata%2Fdata%2FEDSTATS_Country.csv', stringsAsFactors = FALSE)
edu <- tbl_df(edu)
unt <- tbl_df(merge(data, edu, by = 'CountryCode'))
unt
sapply(unt[1:35], function(x) grepl(x, '[Jj]une]'))
sapply(unt[1:35], function(x) grepl(x, '[Jj]une'))
unt$Latest.household.survey
length(grep(': [Jj][Uu][Nn][Ee]', unt$Special.Notes, value = TRUE))
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
amzn
sampleTimes
str(amzn)
summary(amzn)
index(amzn)
head(index(amzn))
?index
sampleTimes <- ymd(sampleTimes)
sampleTimes
sampleTimes = index(amzn)
class(sampleTimes)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
class(sampleTimes)
sampleTimes <- ymd(sampleTimes)
class(sampleTimes)
table(year(sampleTimes) == 2012)
table(year(sampleTimes) == 2012 & wday(sampleTimes) == 2)
gl(3, 10)
f1 <- gl(2 : 5)
f1 <- gl(2, 5)
f2 <- gl(5, 2)
f1
f2
interaction(f1, f2)
list(f1, f2)
split(f1, f2)
x
x < rnorm(10)
x <- rnorm(10)
split(x, list(f1, f2))
split(x, list(f1, f2), drop = TRUE)
str(split(x, list(f1, f2), drop = TRUE))
x
split(x, list(f1, f2))
list(f1, f2)
split(x, list(f1, f2))
sapply(x, function(x) colMeans())
sapply(x, function(x) colMeans(x))
sapply(x, function(x) colMeans(x[,1]))
sapply(x, function(x) sum(x))
x
x <- matrix(rnorm(20), 4, 5)
x
sapply(x, function(x) sum(x))
tapply(x, 2, function(x) sum(x))
tapply(x, function(x) sum(x), 2)
apply(x, 2, function(x) sum(x))
apply(x, 1, function(x) sum(x))
tapply(x, x[,1], function(x) sum(x))
tapply(x, x[,1], sum(x))
tapply(x, x[,1], sum
)
tapply(x[,2], x[,1], sum
)
sapply(x, function(x) sum(x))
sapply(x, function(x) colSum(x))
sapply(x, function(x) colSums(x))
dim(x)
sapply(x, function(x) colMeans(x))
sapply(x, colMeans(x))
sapply(x, colMeans
)
sapply(x, mean)
sapply(x, sum)
sapply(x, function(x) x^2)
sapply(x, function(x) x+3)
sapply(x, runif, min = 0, max = 10)
x1 <- c(1:3)
sapply(x1, runif, min = 0, max = 10)
invisible()
invisible(x1)
x1
?invisible
getwd()
getwd()
setwd('./03 Getting and Cleanong Data')
setwd('./'03 Getting and Cleaning Data'')
setwd('./03 Getting and Cleaning Data)
setwd('./03 Getting and Cleaning Data')
setwd('./3 Getting and Cleaning Data')
getwd()
dir.create('data')
ls
ls()
rm(list = ls())
ls()
dir()
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
f <- file.path('./data', 'InitialData.zip')
download.file(url, f)
dir()
dir('./data')
dir('./data/InitialData.zip')
unz(url, open = "r")
unz(url, filename = '1', open = "r")
unz(url, filename = '1')//, open = "r")
unz(url, filename = '1')#, open = "r")
f <- file.path('./data')
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(url, f, mode="wb")
unzip('./data/InitialData.zip')
unzip('./data/InitialData.zip', './data')
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
f <- file.path('.', 'InitialData.zip')
download.file(url, f)
unzip('./InitialData.zip')
dir()
dir('./UCI HAR Dataset')
